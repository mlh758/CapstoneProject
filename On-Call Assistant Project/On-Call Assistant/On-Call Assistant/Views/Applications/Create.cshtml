@model On_Call_Assistant.Models.Application

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles {
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
}

@section scripts {
    <script src="~/Scripts/bootstrap.min.js"></script>
}

<script>
    $(document).ready(function () {

        //If user checks or unchecks the primary/secondary rotation fields
        //hide/disable or show/endable their color selectors accordingly
        $("#hasOnCall").click(function () {
            if($("#hasOnCall").prop('checked') == false)
            {
                $("#primColorPicker").prop("hidden", true);
                $("#primColorPicker").prop("disabled", true);
            }
            else
            {
                $("#primColorPicker").prop("hidden", false);
                $("#primColorPicker").prop("disabled", false);
            }
        });

        $("#hasSecondary").click(function () {
            if ($("#hasSecondary").prop('checked') == false)
            {
                $("#secColorPicker").prop('hidden', true);
                $("#secColorPicker").prop("disabled", true);
            }
            else
            {
                $("#secColorPicker").prop('hidden', false);
                $("#secColorPicker").prop("disabled", false);
            }
        });
    });
</script>
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Application</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.appName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.appName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.appName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rotationLength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rotationLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rotationLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hasOnCall, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.hasOnCall)
                    @Html.ValidationMessageFor(model => model.hasOnCall, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hasSecondary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.hasSecondary)
                    @Html.ValidationMessageFor(model => model.hasSecondary, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.primDisplayColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*by default color selector should be hidden/disabled because hasOnCall is not checked by default*@
                <input type="color" id="primColorPicker" name="primDisplayColor"  style="margin-top:10px;" hidden disabled/>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.secDisplayColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*by default color selector should be hidden/disabled because hasSecondary is not checked by default*@
                <input type="color" id="secColorPicker" name="secDisplayColor"  style="margin-top:10px;" hidden disabled/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
